---
- name: Create a security group
  local_action:
    module: ec2_group
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID')}}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY')}}"
    name: "M1"
    description: Security Group for AWS Instance
    region: us-east-2
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8080
        to_port: 8080
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: Amazon EC2 | Create Key Pair
  ec2_key:
    name: test2
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID')}}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY')}}"
    region: us-east-2
    key_material: "{{ item }}"
  with_file: /home/ubuntu/.ssh/id_rsa.pub
- name: Launch the new EC2 Instance
  ec2:
    group: "M1"
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID')}}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY')}}"
    instance_type: "t2.micro"
    image: "ami-965e6bf3"
    wait: true
    region: "us-east-2"
    key_name: "test2"
  register: ec2_instances

- name: Update in memory inventory file  
  add_host:
    groups: checkbox
    hostname: "{{ ec2_instances.instances[0].public_ip }}"
    ansible_ssh_user: "ubuntu"
    ansible_ssh_private_key_file: "/home/ubuntu/.ssh/id_rsa"
    ansible_python_interpreter: "/usr/bin/python3"
    host_key_checking: "False"
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    

#- name: Removing any old inventory lines
  #lineinfile:
   # dest: /home/ubuntu/milestone1/roles/ec2/tasks/inventory
    #regexp: "(.*)ansible_ssh_user"
    #state: absent
#- name: Add jenkins
#  lineinfile: 
#    path: /home/ubuntu/milestone1/roles/ec2/tasks/inventory
 #   line: "\n[jenkins]\n"
     
#- name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
 # lineinfile:
  #  dest: /home/ubuntu/milestone1/roles/ec2/tasks/inventory
   # regexp: "{{ec2_instances.instances[0].public_ip}}"
    #insertafter: '[jenkins]'
   # line: "{{ec2_instances.instances[0].public_ip}} ansible_ssh_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa ansible_python_interpreter=/usr/bin/python3 \n"

#- name: Pause for a while 
 # pause:
  #  seconds: 100

- name: Wait for SSH to come up
  wait_for:
    host: "{{ ec2_instances.instances[0].public_ip }}"
    port: 22
    delay: 10
    timeout: 320
    state: started
